name: Build

on:
  push:
    branches: 
      - "main" 
      - "feature/*" 
  pull_request:
    branches: [ "main" ]

jobs:
    
  version:
    runs-on: ubuntu-latest
    outputs:
        tag: ${{ steps.tag_version.outputs.new_tag }}
        changelog: ${{ steps.tag_version.outputs.changelog }}
    steps:
    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.0
      with:
        github_token: ${{ secrets.GITHUBTOKEN }}
  
  build:
    runs-on: ubuntu-latest
    needs: version
    outputs:
        steamcmd_version: ${{ steps.appversion.outputs.steamcmd_version}}
    steps:
    - uses: actions/checkout@v3
            
    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUBTOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ghcr.io/gameservercentral/steamcmd-docker
    - name: extract steamcmd version
      id: appversion
      run: |
          sudo add-apt-repository multiverse; sudo dpkg --add-architecture i386; sudo apt update
          echo "steamcmd_version=$(apt show steamcmd | grep Version | sed 's/^Version: //')"
          echo "steamcmd_version=$(apt show steamcmd | grep Version | sed 's/^Version: //')" >> $GITHUB_OUTPUT


    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ghcr.io/gameservercentral/steamcmd-docker:latest
          ghcr.io/gameservercentral/steamcmd-docker:${{needs.build.outputs.steamcmd_version}}
        labels: ${{ steps.meta.outputs.labels }}

  release:
    runs-on: ubuntu-latest
    needs:  [version, build]
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3

    - name: Create a GitHub release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{needs.version.outputs.tag}}
        name: Release ${{needs.version.outputs.tag}}
        body: ${{needs.version.outputs.changelog}}